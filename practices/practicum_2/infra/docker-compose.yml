services:
  kafka-0:
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - KAFKA_SCHEMA_REGISTRY_URL=schema-registry:8081
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://kafka-0:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_practicum_0_data:/bitnami/kafka
  kafka-1:
    image: bitnami/kafka:3.4
    ports:
      - "9095:9095"
    environment:
      - KAFKA_SCHEMA_REGISTRY_URL=schema-registry:8081
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://kafka-1:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_practicum_1_data:/bitnami/kafka
  kafka-2:
    image: bitnami/kafka:3.4
    ports:
      - "9096:9096"
    environment:
      - KAFKA_SCHEMA_REGISTRY_URL=schema-registry:8081
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://kafka-2:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_practicum_2_data:/bitnami/kafka
  kafka-topic-creator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-0
    entrypoint: /bin/bash
    command: -c "
      while ! nc -z kafka-0 9092; do
        sleep 1;
      done;
      until /usr/bin/kafka-topics --bootstrap-server kafka-0:9092 --list; do
        sleep 1;
      done;
      /usr/bin/kafka-topics --create --if-not-exists --bootstrap-server kafka-0:9092 --replication-factor 2 --partitions 3 --topic user-msg "
  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092,kafka-1:9092,kafka-2:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
  schema-registry:
   image: confluentinc/cp-schema-registry:latest
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
   ports:
     - "8081:8081"
   environment:
     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-0:9092
     SCHEMA_REGISTRY_HOST_NAME: schema-registry
     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
  app-producer:
   build:
    context: ../
    dockerfile: infra/Dockerfile.Producer
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
     - schema-registry
     - kafka-topic-creator
   deploy:
    replicas: 2
  app-single-message-consumer:
   build:
    context: ../
    dockerfile: infra/Dockerfile.SingleMessageConsumer
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
     - schema-registry
     - kafka-topic-creator
   deploy:
    replicas: 2     
  app-batch-message-consumer:
   build:
    context: ../
    dockerfile: infra/Dockerfile.BatchMessageConsumer
   depends_on:
     - kafka-0
     - kafka-1
     - kafka-2
     - schema-registry
     - kafka-topic-creator
   deploy:
    replicas: 2

volumes:
  kafka_practicum_0_data:
  kafka_practicum_1_data:
  kafka_practicum_2_data: